/*	TestVeracity $iInFrame $iOutFrame $saGroup
 *		Returns subset of Group who are contigious between in and out.
 *
 */

// Inputs
string 	$testMkrs[]	; // 
int		$in	; // 
int		$out	; // 

input 	$in    1 ;
input 	$out 100 ;
input 	$testMkrs   [[ "LMT1", "LMT5", "LTOE" ]] ;

// Constants
int		$ARRAY_MAX = 32 ;

// Vars
string	$found[ $ARRAY_MAX ]; // Variably Sized Array of Markers to return
string	$marker				; // Marker We're Inspecting
int		$loop				; // Loop
int		$head_idx = 0		; // Head of variably Sized Array

// for each Marker in Group
int		$mkr_count = `getCount $testMkrs` ;

for( $loop=0; $loop<$mkr_count; $loop+=1 ) {
	$marker = $testMkrs[ $loop ] ;
    
	// Test for existance of marker
	if( exists( $marker ) ) {
		// Test this Marker
		select $marker ;
		boolean $isContig = selectedIsContigBetween( $in,  $out) ;
		if( $isContig ) {
			// Good Marker, Export it
			$found[ $head_idx ] = $marker ;
			$head_idx += 1 ;
			// Prevent Overflow
			if( $head_idx>$ARRAY_MAX ) {
				//bail
				$loop = $mkr_count + 1 ;
			}
		} // if Marker is contig
	} else {
		// marker doesn't exist
		$marker = "Failed" ;
	}
} 

// Sanity test
if ( $head_idx<1 ) {
	// No Contig markers found
	string $saTemp[] = [[ "__NONE__", "__NONE__" ]] ;
	return $saTemp ;
}

// Build Array to return
string $ret[ $head_idx ] ;
for( $loop=0; $loop<$head_idx; $loop+=1 ) {
	$ret[ $loop ] = $found[ $loop ] ;
}

// Return Contig Markers
return $ret ;